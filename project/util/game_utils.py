import os
import json
from pathlib import Path
from os import listdir


from util.agent_class_mapping import agent_class_mapping
import util.llm_agent_utils as agent_tools
from util.game_state import GameState

# a dict of template files {"dungeon-master": {template file}}
    # Need to maintain concurrency across all template files, keeping each one up to date with what it needs to




def run_console_chat(seed, agents, **kwargs):

    while(True):
        dm_response = agents["DM"].generate()      # dungeon master generates a thing, commented when debugging
        #dm_response = debug_DM_response() 
        #print("===========dungeon master response============")
        #print(dm_response['message']['message']['content'])

        # parsing and processing tags generated by DM
        agent_tools.process_tags(dm_response=dm_response, agents=agents)
        

        #agents["DM"].add_message(["Filled_Response", dm_response['message']['message']['content']])
        with open("output.txt", "a") as file:
            file.write("======================START===================")
            file.write(dm_response['message']['message']['content'])
            file.write("\n\n\n")
            file.write("======================END===================")
        

def debug_DM_response():
    with open("debug_response.txt") as file:
        content = file.read()
        msg = {}
        msg['message'] = {}
        msg['message']['message'] = {}
        msg['message']['message']['content'] = content
        return msg


def prepare_game():
    agents = {}

    print(os.listdir("./agent_templates"))

    agent_list = os.listdir("./agent_templates")
    gs = GameState() # this should be shared among all agents

    tags_from_json = []
    #populate agents list
    for agent_name in agent_list:
        with open("./agent_templates/" + agent_name, 'r') as file:     
            #print(agent_name)
            data = json.load(file)
            tag = data["metadata"]["tag"]
            agents[tag] = agent_class_mapping[tag](data, gs, agents)   
    return agents